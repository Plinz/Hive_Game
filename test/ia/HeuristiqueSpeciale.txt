Beetle débile ne pense pas à se mettre au dessus de la reine.


Faire une heuristique Mid Game, une heuristique Late Game. 

[0] : Placement beaucoup plus rapide


Si on change le valide movement ça influe le valid placement.

Pin bien : BIEN
Entourage de la reine : PAS BIEN
Defense : PAS OUF


Fin : Pour entourer la reine ennemie on place dans l'ordre :
-> Spider
-> Beetle
-> GH 

_______________

Special Heuristic :

Certains trucs existent peut etre déjà implicitement avec une bonne heuristique

Queen :
	-> Defensif :
		Si NB insecte autour queen > 2 && la reine peut bouger :
			Deplacer la reine vers un endroit avec moins de voisins. 
Spider :
	-> Early :
		Si drop possible où après il peut bloquer un moustique / beetle / queen :
			Poser la spider
			Next Turn : Se souvenir qu'il faut pin avec la spider si une nouvelle opportunité meilleure ne s'est pas présentée
Grasshopper :
	-> Depin :
		
		Si Late Game
			Si drop possible à coté d'une fourmis qui pin une pièce / qui est pinné, et qu'il peut la libérer
				Poser la grasshopper
				Next Turn : Se souvenir qu'il faut depin !
	-> Late Move :
		Si il y a une zone autour de la Queen ennemie qui est à l'intérieur de la Ruche :
			Si une sauterelle peut y arriver à partir d'une zone de drop
				Poser la grasshoper 
				Next Turn : Se souvenir qu'il faut se déplacer.
Beetle :
	-> Offensif : 
		-> Une de nos pièces pin la queen ennemie, poser le Beetle pour qu'il s'approche de la Queen Enemie (2 ou 3 de distance)
		-> Le faire avancer si la distance est proche en passant par dessus nos pièces
		-> Le faire avancer jusqu'à la Reine ennemi sur lequel il va rester pour Direct Drop  
	-> Defensif : 
		-> Un scarabé s'approche de notre Queen 
			-> Je le pose le plus prêt possible ( eviter de bloquer la queen quand même)
			-> Si je peux bloquer le scarabé avant qu'il arrive sur ma reine je le fais
			-> Sinon je mets le mien en couverture par dessus ma reine pour eviter le direct drop
	-> Grosse distance : Eviter de le placer/deplacer sauf en late game
Ant : 
	-> Pin (déjà implem) 

Special Case :
	-> Do not suicide :
		Si Pièces autour de la reine > 3 : On ne déplace rien qui se mette à coté de la reine.
	-> Direct Drop : 
		-> Counter Defensif :
			Voir avec le Beetle
		-> Placement Offensif : 
			Si on pose des pièces dans le but d'encercler la reine, on le fait de préférence en Direct Drop



MODIFLO

    public static final double[] MAXIMISE_QUEEN = {0.5, 0, 1, -80, 0, 0, -18};
    public static final double[] MAXIMISE_SPIDER = {0.5, 0.5, 0.5, 0, 1, 1.1, -0.5};
    public static final double[] MAXIMISE_GH = {0.5, 0.5, 0.5, 0, 1.5, 0.5, -1};
    public static final double[] MAXIMISE_BEETLE = {0.5, 0.5, 0.5, 1, 1, 1.1, -3};
    public static final double[] MAXIMISE_ANT = {0.5, 0.5, 0.5, 0, 1, 1.5, -3};
    public static final double[] MAXIMISE_GENERAL = {0, 0, 0, 0, 0, 0, -1};
    public static final double[] MINIMISE_QUEEN = {-0.5, -0.5, -0.5, 80, -1, -0.5, 18};
    public static final double[] MINIMISE_SPIDER = {-0.5, -0.5, -0.5, 0, -1, -1.1, 0.5};
    public static final double[] MINIMISE_GH = {-0.5, -0.5, -0.5, 0, -1.5, -0.5, 1};
    public static final double[] MINIMISE_BEETLE = {-0.5, -0.5, -0.5, 1, -1, -1.1, 3};
    public static final double[] MINIMISE_ANT = {-0.5, -0.5, -0.5, 0, -1, -1.5, 3};
    public static final double[] MINIMISE_GENERAL = {-0, -0, -0, 0, 0, 0, 1};



    public static final double[] MAXIMISE_QUEEN = {0.5, 0, 1, -30, 0, 0, -18};
    public static final double[] MAXIMISE_SPIDER = {0.5, -4.7, 0.5, -8.4, 1, -2.7, -0.5};
    public static final double[] MAXIMISE_GH = {0.5, 0.5, 3.5, 0, 1.5, 0.5, 1.9};
    public static final double[] MAXIMISE_BEETLE = {0.5, -1.7, 0.5, 2, 1, 1.1, -3};
    public static final double[] MAXIMISE_ANT = {0.5, 1.5, 0.5, 0, 1, 1.2, 4.19};
    public static final double[] MAXIMISE_GENERAL = {0, 0, 0, 0, 0, 0, -1};
    public static final double[] MINIMISE_QUEEN = {-0.5, 1.1, -0.5, 30, -1, -0.5, 18};
    public static final double[] MINIMISE_SPIDER = {-0.5, -0.5, -1.7, 0, -1, -1.1, 0.5};
    public static final double[] MINIMISE_GH = {-11, -0.5, -0.5, 0, -1.5, -0.5, 1};
    public static final double[] MINIMISE_BEETLE = {-0.5, -0.5, -2.3, 1, -1, -1.1, 3};
    public static final double[] MINIMISE_ANT = {-0.5, -2.8, -0.5, 0, -1, -1.5, -1.6};
    public static final double[] MINIMISE_GENERAL = {-1.8, 4, -0, 0, 0, 2.8, 1.1};


Petit probleme peut pin ses propres fourmis :/ 
Il faut voir ça au moment ou on choisit l'endroit ou drop.
    public static final double[] MEDIUM_ADD_TURN_1 = {0, 0.5, 0.5, 0, 0};
        public static final double[] MEDIUM_ADD_TURN_2_IF_SPIDER_ON_1 = {0.5,0,0,0,0.5};
        public static final double[] MEDIUM_ADD_TURN_2_IF_GRASSHOPPER_ON_1 = {0.5,0,0,0,0.5};
        public static final double[] MEDIUM_ADD_TURN_2_IF_QUEEN_ON_1 = {0.5,0,0,0,0.5};
        public static final double[] MEDIUM_ADD_TURN_2_IF_BETTLE_OR_ANT_ON_1 = {0.5,0,0,0,0.5};
    public static final double[] MEDIUM_ADD_TURN_3 = {0.5, 0.125, 0, 0, 0.375};
    public static final double[] MEDIUM_ADD_TURN_4 = {0.5, 0, 0, 0, 0.5};
    
    public static final double MEDIUM_TURN_4_CHOOSE_TO_ADD = 0.5;



    public static final double[] MEDIUM_ADD_TURN_1 = {0.1, 0.4, 0.4, 0.05, 0.05};
        public static final double[] MEDIUM_ADD_TURN_2_IF_SPIDER_ON_1 = {0.4, 0.1, 0.4, 0.05, 0.05};
        public static final double[] MEDIUM_ADD_TURN_2_IF_GRASSHOPPER_ON_1 = {0.4, 0.4, 0.1, 0.05, 0.05};
        public static final double[] MEDIUM_ADD_TURN_2_IF_QUEEN_ON_1 = {0, 0.45, 0.45, 0.05, 0.05};
        public static final double[] MEDIUM_ADD_TURN_2_IF_BETTLE_OR_ANT_ON_1 = {0.4, 0.3, 0.3, 0, 0};
    public static final double[] MEDIUM_ADD_TURN_3 = {0.4, 0.15, 0.15, 0.15, 0.15};
    public static final double[] MEDIUM_ADD_TURN_4 = {0, 0.1, 0.1, 0.4, 0.4};
    
    public static final double MEDIUM_TURN_4_CHOOSE_TO_ADD = 0.5;
